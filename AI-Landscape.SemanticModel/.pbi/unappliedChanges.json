{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "000_tblOrg",
      "lineageTag": "f75e56a8-1f8d-4d04-97bb-202cb6253d92",
      "queryGroupId": "1dece40a-c19d-4696-b6a7-031e295bcd4a",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = GoogleSheets.Contents(\"https://docs.google.com/spreadsheets/d/1zEiH7vRUdsV5oiYUqm0kHBdVJHJjveYz1IDTWHWsApI/\"),",
        "    Organisations_Table = Source{[name=\"Organisation\",ItemKind=\"Table\"]}[Data],",
        "    #\"Promoted Headers\" = Table.PromoteHeaders(Organisations_Table, [PromoteAllScalars=true]),",
        "    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Promoted Headers\", [PromoteAllScalars=true]),",
        "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Promoted Headers1\",{\"\"}),",
        "    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Columns1\",1),",
        "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Removed Bottom Rows\", \"Organisation\", \"Organisation-Shortened\"),",
        "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Duplicated Column\", \"Organisation-Shortened\", Splitter.SplitTextByEachDelimiter({\"(\"}, QuoteStyle.Csv, true), {\"Organisation-Shortened.1\", \"Organisation-Shortened.2\"}),",
        "    #\"Replaced Value23\" = Table.ReplaceValue(#\"Split Column by Delimiter\",\")\",\"\",Replacer.ReplaceText,{\"Organisation-Shortened.2\"}),",
        "    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value23\", \"Organisation-Shortened\", each if [#\"Organisation-Shortened.2\"] = null then [#\"Organisation-Shortened.1\"] else [#\"Organisation-Shortened.2\"]),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Added Conditional Column\",\"University\",\"Uni\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value\",\"Australian Capital Territory\",\"ACT\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value14\" = Table.ReplaceValue(#\"Replaced Value10\",\"Western Australia\",\"WA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value15\" = Table.ReplaceValue(#\"Replaced Value14\",\"Queensland\",\"QLD\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value15\",\"New South Wales\",\"NSW\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value12\" = Table.ReplaceValue(#\"Replaced Value11\",\"Victoria\",\"VIC\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value13\" = Table.ReplaceValue(#\"Replaced Value12\",\"South Australia\",\"SA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value13\",\"Australians\",\"Aussies\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"Effective Altruism\",\"EA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Artificial Intelligence\",\"AI\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Technology\",\"Tech\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value9\",\"Governance\",\"Gov\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Government\",\"Govt\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"Australian\",\"Aus\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Federal\",\"Fed\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"Australia\",\"Aus\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value16\" = Table.ReplaceValue(#\"Replaced Value5\",\"Mathematic\",\"Math\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value17\" = Table.ReplaceValue(#\"Replaced Value16\",\"Group\",\"Grp\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value18\" = Table.ReplaceValue(#\"Replaced Value17\",\"International\",\"Intl\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value19\" = Table.ReplaceValue(#\"Replaced Value18\",\"Development\",\"Dev\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value20\" = Table.ReplaceValue(#\"Replaced Value19\",\" and\",\" &\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value21\" = Table.ReplaceValue(#\"Replaced Value20\",\"Intelligence\",\"Intell.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value22\" = Table.ReplaceValue(#\"Replaced Value21\",\"Commonwealth Scientific & Industrial Research Organisation (CSIRO)\",\"CSIRO\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value24\" = Table.ReplaceValue(#\"Replaced Value22\",\"Institute\",\"Institute\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value25\" = Table.ReplaceValue(#\"Replaced Value24\",\"Conference\",\"Conf\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value26\" = Table.ReplaceValue(#\"Replaced Value25\",\"Fundamentals\",\"Fundies\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value27\" = Table.ReplaceValue(#\"Replaced Value26\",\"Institute\",\"Inst.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value28\" = Table.ReplaceValue(#\"Replaced Value27\",\"Automated\",\"Auto.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value29\" = Table.ReplaceValue(#\"Replaced Value28\",\"Existential\",\"Exist.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value30\" = Table.ReplaceValue(#\"Replaced Value29\",\"Canada\",\"CA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value31\" = Table.ReplaceValue(#\"Replaced Value30\",\"Singapore\",\"SG\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value32\" = Table.ReplaceValue(#\"Replaced Value31\",\"Korea\",\"KR\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value33\" = Table.ReplaceValue(#\"Replaced Value32\",\"Japan\",\"JP\",Replacer.ReplaceText,{\"Organisation-Shortened\"})",
        "in",
        "    #\"Replaced Value33\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "000_tblLocations",
      "lineageTag": "e2409cdb-990b-4321-aafb-4c4c3e94c4db",
      "queryGroupId": "1dece40a-c19d-4696-b6a7-031e295bcd4a",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCnZU0lEKzi8tyVBwLC0uKUrMyUzUQTCVYnWilcJBasJTi0tSi/Jwq/ILDgcq80stV4AYF56Yk1qMrijM0xmoKCwzuSS/CM2IWAA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Acronym = _t, #\"Full-Location\" = _t]),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Acronym\", type text}, {\"Full-Location\", type text}})",
        "in",
        "    #\"Changed Type\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "000_tblHeadcount",
      "lineageTag": "8d5709c2-5678-4663-9b50-a962c3ba2d07",
      "queryGroupId": "1dece40a-c19d-4696-b6a7-031e295bcd4a",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = GoogleSheets.Contents(\"https://docs.google.com/spreadsheets/d/1zEiH7vRUdsV5oiYUqm0kHBdVJHJjveYz1IDTWHWsApI/\"),",
        "    Headcount_Table = Source{[name=\"Headcount\",ItemKind=\"Table\"]}[Data],",
        "    #\"Promoted Headers\" = Table.PromoteHeaders(Headcount_Table, [PromoteAllScalars=true]),",
        "    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Promoted Headers\", [PromoteAllScalars=true]),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Promoted Headers1\",{\"\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each ([Date] <> null and [Date] <> \"\")),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"FTE notkilleveryoneism\", type number}, {\"FTE total\", type number}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = GoogleSheets.Contents(\\\"https://docs.google.com/spreadsheets/d/1zEiH7vRUdsV5oiYUqm0kHBdVJHJjveYz1IDTWHWsApI/\\\"),\\n    Headcount_Table = Source{[name=\\\"Headcount\\\",ItemKind=\\\"Table\\\"]}[Data],\\n    #\\\"Promoted Headers\\\" = Table.PromoteHeaders(Headcount_Table, [PromoteAllScalars=true]),\\n    #\\\"Promoted Headers1\\\" = Table.PromoteHeaders(#\\\"Promoted Headers\\\", [PromoteAllScalars=true]),\\n    #\\\"Removed Columns\\\" = Table.RemoveColumns(#\\\"Promoted Headers1\\\",{\\\"\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Removed Columns\\\", each ([Date] <> null and [Date] <> \\\"\\\")),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Filtered Rows\\\",{{\\\"FTE notkilleveryoneism\\\", type number}, {\\\"FTE total\\\", type number}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "005_tblOrg-SplitParents",
      "lineageTag": "d96f7834-2f02-4171-8577-00660fd7c095",
      "queryGroupId": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened\", \"Parent org\", \"URL\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"Parent org\", Splitter.SplitTextByDelimiter(\", \", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Parent org\")",
        "in",
        "    #\"Split Column by Delimiter\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"000_tblOrg\\\",\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"Parent org\\\", \\\"URL\\\"}),\\n    #\\\"Split Column by Delimiter\\\" = Table.ExpandListColumn(Table.TransformColumns(#\\\"Removed Other Columns\\\", {{\\\"Parent org\\\", Splitter.SplitTextByDelimiter(\\\", \\\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \\\"Parent org\\\")\\nin\\n    #\\\"Split Column by Delimiter\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "010_tblOrg-Formatting",
      "lineageTag": "b515d12b-1bca-4180-9b56-1111d984fc1b",
      "queryGroupId": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Replaced Value\" = Table.ReplaceValue(Source,\"(\",\"https://\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\")\",\"\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Replaced Value1\", \"URL\", Splitter.SplitTextByEachDelimiter({\"#(lf)\"}, QuoteStyle.Csv, false), {\"URL-Main\", \"URL-Secondary\"})",
        "in",
        "    #\"Split Column by Delimiter\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "015_tblOrg-SplitURLs",
      "lineageTag": "b17da685-ca3c-4608-b9e1-2f7706fa0ace",
      "queryGroupId": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"010_tblOrg-Formatting\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened\", \"URL\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"URL\", Splitter.SplitTextByDelimiter(\"#(cr)#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"URL\"),",
        "    #\"Split Column by Delimiter1\" = Table.ExpandListColumn(Table.TransformColumns(#\"Split Column by Delimiter\", {{\"URL\", Splitter.SplitTextByEachDelimiter({\"#(cr)\"}, QuoteStyle.Csv, false), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"URL\"),",
        "    #\"Split Column by Delimiter2\" = Table.ExpandListColumn(Table.TransformColumns(#\"Split Column by Delimiter1\", {{\"URL\", Splitter.SplitTextByDelimiter(\"#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"URL\")",
        "in",
        "    #\"Split Column by Delimiter2\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "010_Hierarchy",
      "lineageTag": "1b0ff087-9ecd-4948-962c-1ed2335ff8c0",
      "queryGroupId": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = \"World\",",
        "    #\"Converted to Table\" = #table(1, {{Source}}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Converted to Table\",{{\"Column1\", \"Level1\"}}),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Renamed Columns\", {\"Level1\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    Expandedtest = Table.ExpandTableColumn(#\"Merged Queries\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\", \"URL\"}, {\"Level2\", \"Lvl2\", \"Level2URL\"}),",
        "    #\"Merged Queries1\" = Table.NestedJoin(Expandedtest, {\"Level2\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded 000_tblOrg1\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\", \"URL\"}, {\"Level3\", \"Lvl3\", \"Level3URL\"}),",
        "    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded 000_tblOrg1\", {\"Level3\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded 000_tblOrg2\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\"}, {\"Level4\", \"Lvl4\"}),",
        "    #\"Merged Queries3\" = Table.NestedJoin(#\"Expanded 000_tblOrg2\", {\"Level4\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded 000_tblOrg3\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\"}, {\"Level5\", \"Lvl5\"}),",
        "    #\"Merged Queries4\" = Table.NestedJoin(#\"Expanded 000_tblOrg3\", {\"Level5\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded 000_tblOrg4\" = Table.ExpandTableColumn(#\"Merged Queries4\", \"005_tblOrg-SplitParents\", {\"Organisation\"}, {\"Level6\"}),",
        "    #\"Merged Queries5\" = Table.NestedJoin(#\"Expanded 000_tblOrg4\", {\"Level6\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded 000_tblOrg5\" = Table.ExpandTableColumn(#\"Merged Queries5\", \"005_tblOrg-SplitParents\", {\"Organisation\"}, {\"Level7\"}),",
        "    #\"Added Conditional Column\" = Table.AddColumn(#\"Expanded 000_tblOrg5\", \"URL-Combined\", each if [Level3URL] <> null then [Level3URL] else [Level2URL]),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Added Conditional Column\",\"(\",\"https://\",Replacer.ReplaceText,{\"URL-Combined\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\")\",\"\",Replacer.ReplaceText,{\"URL-Combined\"}),",
        "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Replaced Value1\", \"URL-Combined\", Splitter.SplitTextByEachDelimiter({\"#(lf)\"}, QuoteStyle.Csv, false), {\"URL-Main\", \"URL-Secondary\"})",
        "in",
        "    #\"Split Column by Delimiter\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = \\\"World\\\",\\n    #\\\"Converted to Table\\\" = #table(1, {{Source}}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Converted to Table\\\",{{\\\"Column1\\\", \\\"Level1\\\"}}),\\n    #\\\"Merged Queries\\\" = Table.NestedJoin(#\\\"Renamed Columns\\\", {\\\"Level1\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    Expandedtest = Table.ExpandTableColumn(#\\\"Merged Queries\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"URL\\\"}, {\\\"Level2\\\", \\\"Lvl2\\\", \\\"Level2URL\\\"}),\\n    #\\\"Merged Queries1\\\" = Table.NestedJoin(Expandedtest, {\\\"Level2\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded 000_tblOrg1\\\" = Table.ExpandTableColumn(#\\\"Merged Queries1\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"URL\\\"}, {\\\"Level3\\\", \\\"Lvl3\\\", \\\"Level3URL\\\"}),\\n    #\\\"Merged Queries2\\\" = Table.NestedJoin(#\\\"Expanded 000_tblOrg1\\\", {\\\"Level3\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded 000_tblOrg2\\\" = Table.ExpandTableColumn(#\\\"Merged Queries2\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\"}, {\\\"Level4\\\", \\\"Lvl4\\\"}),\\n    #\\\"Merged Queries3\\\" = Table.NestedJoin(#\\\"Expanded 000_tblOrg2\\\", {\\\"Level4\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded 000_tblOrg3\\\" = Table.ExpandTableColumn(#\\\"Merged Queries3\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\"}, {\\\"Level5\\\", \\\"Lvl5\\\"}),\\n    #\\\"Merged Queries4\\\" = Table.NestedJoin(#\\\"Expanded 000_tblOrg3\\\", {\\\"Level5\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded 000_tblOrg4\\\" = Table.ExpandTableColumn(#\\\"Merged Queries4\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\"}, {\\\"Level6\\\"}),\\n    #\\\"Merged Queries5\\\" = Table.NestedJoin(#\\\"Expanded 000_tblOrg4\\\", {\\\"Level6\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded 000_tblOrg5\\\" = Table.ExpandTableColumn(#\\\"Merged Queries5\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\"}, {\\\"Level7\\\"}),\\n    #\\\"Added Conditional Column\\\" = Table.AddColumn(#\\\"Expanded 000_tblOrg5\\\", \\\"URL-Combined\\\", each if [Level3URL] <> null then [Level3URL] else [Level2URL]),\\n    #\\\"Replaced Value\\\" = Table.ReplaceValue(#\\\"Added Conditional Column\\\",\\\"(\\\",\\\"https://\\\",Replacer.ReplaceText,{\\\"URL-Combined\\\"}),\\n    #\\\"Replaced Value1\\\" = Table.ReplaceValue(#\\\"Replaced Value\\\",\\\")\\\",\\\"\\\",Replacer.ReplaceText,{\\\"URL-Combined\\\"}),\\n    #\\\"Split Column by Delimiter\\\" = Table.SplitColumn(#\\\"Replaced Value1\\\", \\\"URL-Combined\\\", Splitter.SplitTextByEachDelimiter({\\\"#(lf)\\\"}, QuoteStyle.Csv, false), {\\\"URL-Main\\\", \\\"URL-Secondary\\\"})\\nin\\n    #\\\"Split Column by Delimiter\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "020_ActivitiesSplit",
      "lineageTag": "d743bfa4-b32b-4f80-9569-a8db58bab608",
      "queryGroupId": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Activities AI\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"Activities AI\", Splitter.SplitTextByDelimiter(\", \", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Activities AI\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Activities AI\", type text}}),",
        "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Changed Type\", \"Activities AI\", \"Activities AI-shortened\"),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Duplicated Column\",\"mid-career\",\"mid\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"No specific AI focus\",\"None\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"government\",\"govt\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"Coworking\",\"Cowork\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Advocacy\",\"Advoc.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"Research\",\"Rsrch\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"Advisory\",\"Advis.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"capabilities\",\"capab.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Charity / nonprofit\",\"Nonprofit\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"existential\",\"exist.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value9\",\"catastrophic\",\"catast.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value11\",\"mundane\",\"mund.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Added Activities-Explainer\" = Table.AddColumn(#\"Replaced Value10\", \"Activities-Explainer\", each if [Activities AI] = \"Talent early\" then \"Gets more people into the talent pipeline.#(#)(#)(cr)#(#)(#)(lf) Allows minimal or <3 years experience with no qualifications.\" else if [Activities AI] = \"Talent mid-career\" then \"For moderately experienced people in AI safety, or experienced people in other fields transitioning over.\" else if [Activities AI] = \"Research policy\" then \"Creates policy proposals and researches governance structures.\" else if [Activities AI] = \"Research safety mundane\" then \"Looks at mundane harms that society already has coping mechanisms for. E.g. deepfakes, cheating on school exams.\" else if [Activities AI] = \"Research safety existential\" then \"Looks at catastrophic or existential harms that society does not have ways to cope with. For example, \" else if [Activities AI] = \"Company private\" then \"It has commercial incentives and no public oversight but also not suable for not maximising shareholder profits.\" else if [Activities AI] = \"Company public\" then \"It has commercial incentives and has public oversight but also can be sued for not maximising shareholder profits.\" else if [Activities AI] = \"Research capabilities\" then \"Is focused on improving AI capabilities, i.e. letting it do stuff whether safe or not.\" else null),",
        "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Added Activities-Explainer\", \"Activities AI-shortened\", \"Activities AI - Level\"),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Duplicated Column1\", \"Activities AI - Level\", Splitter.SplitTextByDelimiter(\" \", QuoteStyle.Csv), {\"Activities AI - Level.1\", \"Activities AI - Level.2\", \"Activities AI - Level.3\"})",
        "in",
        "    #\"Split Column by Delimiter1\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"000_tblOrg\\\",\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"Organisation\\\", \\\"Activities AI\\\"}),\\n    #\\\"Split Column by Delimiter\\\" = Table.ExpandListColumn(Table.TransformColumns(#\\\"Removed Other Columns\\\", {{\\\"Activities AI\\\", Splitter.SplitTextByDelimiter(\\\", \\\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \\\"Activities AI\\\"),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Split Column by Delimiter\\\",{{\\\"Activities AI\\\", type text}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "020_ParentsHierarchy",
      "lineageTag": "ca55b85c-a44e-472d-bc96-11d909e54d7d",
      "queryGroupId": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Parent org\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each true)",
        "in",
        "    #\"Filtered Rows\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"000_tblOrg\\\",\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"Organisation\\\", \\\"Parent org\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Removed Other Columns\\\", each true)\\nin\\n    #\\\"Filtered Rows\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Org",
      "lineageTag": "a95f0817-2701-4284-b228-3549caa6e99c",
      "queryGroupId": "1c2b033a-8269-4b9a-86c0-2f768e89ed05",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"010_tblOrg-Formatting\"",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"010_tblOrg-Formatting\\\"\\nin\\n    Source\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    }
  ],
  "queryGroups": [
    {
      "name": "1-Extract",
      "id": "1dece40a-c19d-4696-b6a7-031e295bcd4a",
      "order": 1,
      "description": ""
    },
    {
      "name": "3-Load",
      "id": "1c2b033a-8269-4b9a-86c0-2f768e89ed05",
      "order": 3,
      "description": ""
    },
    {
      "name": "2-Transform",
      "id": "0eafc28f-727e-4630-9349-7348aaec09ba",
      "order": 2,
      "description": ""
    }
  ],
  "culture": "en-AU",
  "firewallEnabled": true
}