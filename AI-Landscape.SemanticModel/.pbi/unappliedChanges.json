{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "000_tblOrg",
      "lineageTag": "f75e56a8-1f8d-4d04-97bb-202cb6253d92",
      "queryGroupId": "03cc17d2-b786-4533-9e08-3757305b8559",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = GoogleSheets.Contents(\"https://docs.google.com/spreadsheets/d/1zEiH7vRUdsV5oiYUqm0kHBdVJHJjveYz1IDTWHWsApI/\"),",
        "    Organisations_Table = Source{[name=\"Organisation\",ItemKind=\"Table\"]}[Data],",
        "    #\"Promoted Headers\" = Table.PromoteHeaders(Organisations_Table, [PromoteAllScalars=true]),",
        "    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Promoted Headers\", [PromoteAllScalars=true]),",
        "    #\"Removed blank column\" = Table.RemoveColumns(#\"Promoted Headers1\",{\"\"}),",
        "    #\"Removed bottom row\" = Table.RemoveLastN(#\"Removed blank column\",1),",
        "    #\"Duplicated Organisation\" = Table.DuplicateColumn(#\"Removed bottom row\", \"Organisation\", \"Organisation-Shortened\"),",
        "    #\"Split Organisation by (\" = Table.SplitColumn(#\"Duplicated Organisation\", \"Organisation-Shortened\", Splitter.SplitTextByEachDelimiter({\"(\"}, QuoteStyle.Csv, true), {\"Organisation-Shortened.1\", \"Organisation-Shortened.2\"}),",
        "    #\"Replaced ) in Organisation-Shortened.2\" = Table.ReplaceValue(#\"Split Organisation by (\",\")\",\"\",Replacer.ReplaceText,{\"Organisation-Shortened.2\"}),",
        "    #\"Added Organisation-Shortened\" = Table.AddColumn(#\"Replaced ) in Organisation-Shortened.2\", \"Organisation-Shortened\", each if [#\"Organisation-Shortened.2\"] = null then [#\"Organisation-Shortened.1\"] else [#\"Organisation-Shortened.2\"]),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Added Organisation-Shortened\",\"University\",\"Uni\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value\",\"Australian Capital Territory\",\"ACT\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value14\" = Table.ReplaceValue(#\"Replaced Value10\",\"Western Australia\",\"WA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value15\" = Table.ReplaceValue(#\"Replaced Value14\",\"Queensland\",\"QLD\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value15\",\"New South Wales\",\"NSW\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value12\" = Table.ReplaceValue(#\"Replaced Value11\",\"Victoria\",\"VIC\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value13\" = Table.ReplaceValue(#\"Replaced Value12\",\"South Australia\",\"SA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value13\",\"Australians\",\"Aussies\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"Effective Altruism\",\"EA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Artificial Intelligence\",\"AI\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Technology\",\"Tech\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value9\",\"Governance\",\"Gov\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Government\",\"Govt\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"Australian\",\"Aus\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Federal\",\"Fed\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"Australia\",\"Aus\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value16\" = Table.ReplaceValue(#\"Replaced Value5\",\"Mathematic\",\"Math\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value17\" = Table.ReplaceValue(#\"Replaced Value16\",\"Group\",\"Grp\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value18\" = Table.ReplaceValue(#\"Replaced Value17\",\"International\",\"Intl\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value19\" = Table.ReplaceValue(#\"Replaced Value18\",\"Development\",\"Dev\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value20\" = Table.ReplaceValue(#\"Replaced Value19\",\" and\",\" &\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value21\" = Table.ReplaceValue(#\"Replaced Value20\",\"Intelligence\",\"Intell.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value22\" = Table.ReplaceValue(#\"Replaced Value21\",\"Commonwealth Scientific & Industrial Research Organisation (CSIRO)\",\"CSIRO\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value24\" = Table.ReplaceValue(#\"Replaced Value22\",\"Institute\",\"Institute\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value25\" = Table.ReplaceValue(#\"Replaced Value24\",\"Conference\",\"Conf\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value26\" = Table.ReplaceValue(#\"Replaced Value25\",\"Fundamentals\",\"Fundies\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value27\" = Table.ReplaceValue(#\"Replaced Value26\",\"Institute\",\"Inst.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value28\" = Table.ReplaceValue(#\"Replaced Value27\",\"Automated\",\"Auto.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value29\" = Table.ReplaceValue(#\"Replaced Value28\",\"Existential\",\"Exist.\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value30\" = Table.ReplaceValue(#\"Replaced Value29\",\"Canada\",\"CA\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value31\" = Table.ReplaceValue(#\"Replaced Value30\",\"Singapore\",\"SG\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value32\" = Table.ReplaceValue(#\"Replaced Value31\",\"Korea\",\"KR\",Replacer.ReplaceText,{\"Organisation-Shortened\"}),",
        "    #\"Replaced Value23\" = Table.ReplaceValue(#\"Replaced Value32\",\"Japan\",\"JP\",Replacer.ReplaceText,{\"Organisation-Shortened\"})",
        "in",
        "    #\"Replaced Value23\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "000_tblLocationsAcronyms",
      "lineageTag": "e2409cdb-990b-4321-aafb-4c4c3e94c4db",
      "queryGroupId": "03cc17d2-b786-4533-9e08-3757305b8559",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCnZU0lEKzi8tyVBwLC0uKUrMyUzUQTCVYnWilcJBasJTi0tSi/Jwq/ILDgcq80stV4AYF56Yk1qMrijM0xmoKCwzuSS/CM2IWAA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Acronym = _t, #\"Full-Location\" = _t]),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Acronym\", type text}, {\"Full-Location\", type text}})",
        "in",
        "    #\"Changed Type\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "000_tblHeadcount",
      "lineageTag": "8d5709c2-5678-4663-9b50-a962c3ba2d07",
      "queryGroupId": "03cc17d2-b786-4533-9e08-3757305b8559",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = GoogleSheets.Contents(\"https://docs.google.com/spreadsheets/d/1zEiH7vRUdsV5oiYUqm0kHBdVJHJjveYz1IDTWHWsApI/\"),",
        "    Headcount_Table = Source{[name=\"Headcount\",ItemKind=\"Table\"]}[Data],",
        "    #\"Promoted Headers\" = Table.PromoteHeaders(Headcount_Table, [PromoteAllScalars=true]),",
        "    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Promoted Headers\", [PromoteAllScalars=true]),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Promoted Headers1\",{\"\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each ([Date] <> null and [Date] <> \"\")),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"FTE notkilleveryoneism\", type number}, {\"FTE total\", type number}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = GoogleSheets.Contents(\\\"https://docs.google.com/spreadsheets/d/1zEiH7vRUdsV5oiYUqm0kHBdVJHJjveYz1IDTWHWsApI/\\\"),\\n    Headcount_Table = Source{[name=\\\"Headcount\\\",ItemKind=\\\"Table\\\"]}[Data],\\n    #\\\"Promoted Headers\\\" = Table.PromoteHeaders(Headcount_Table, [PromoteAllScalars=true]),\\n    #\\\"Promoted Headers1\\\" = Table.PromoteHeaders(#\\\"Promoted Headers\\\", [PromoteAllScalars=true]),\\n    #\\\"Removed Columns\\\" = Table.RemoveColumns(#\\\"Promoted Headers1\\\",{\\\"\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Removed Columns\\\", each ([Date] <> null and [Date] <> \\\"\\\")),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Filtered Rows\\\",{{\\\"FTE notkilleveryoneism\\\", type number}, {\\\"FTE total\\\", type number}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "005_tblOrg-SplitParents",
      "lineageTag": "d96f7834-2f02-4171-8577-00660fd7c095",
      "queryGroupId": "7c7cce0d-9bc6-4e8b-8de4-c13128042440",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened\", \"Parent org\", \"URL\"}),",
        "    #\"Split Parent org by ,\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"Parent org\", Splitter.SplitTextByDelimiter(\", \", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Parent org\"),",
        "    #\"Duplicated Parent org\" = Table.DuplicateColumn(#\"Split Parent org by ,\", \"Parent org\", \"Parent org-shortened\"),",
        "    #\"Split Parent org-shortened by (\" = Table.SplitColumn(#\"Duplicated Parent org\", \"Parent org-shortened\", Splitter.SplitTextByEachDelimiter({\"(\"}, QuoteStyle.Csv, false), {\"Parent org-base\", \"Parent org-acronym\"}),",
        "    #\"Replaced ) in Parent org-acronym\" = Table.ReplaceValue(#\"Split Parent org-shortened by (\",\")\",\"\",Replacer.ReplaceText,{\"Parent org-acronym\"}),",
        "    #\"Added Parent org-shortened\" = Table.AddColumn(#\"Replaced ) in Parent org-acronym\", \"Parent org-shortened\", each if [#\"Parent org-acronym\"] = null then [#\"Parent org-base\"] else [#\"Parent org-acronym\"])",
        "in",
        "    #\"Added Parent org-shortened\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"000_tblOrg\\\",\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"Parent org\\\", \\\"URL\\\"}),\\n    #\\\"Split Parent org by ,\\\" = Table.ExpandListColumn(Table.TransformColumns(#\\\"Removed Other Columns\\\", {{\\\"Parent org\\\", Splitter.SplitTextByDelimiter(\\\", \\\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \\\"Parent org\\\"),\\n    #\\\"Duplicated Parent org\\\" = Table.DuplicateColumn(#\\\"Split Parent org by ,\\\", \\\"Parent org\\\", \\\"Parent org-shortened\\\"),\\n    #\\\"Split Parent org-shortened by (\\\" = Table.SplitColumn(#\\\"Duplicated Parent org\\\", \\\"Parent org-shortened\\\", Splitter.SplitTextByEachDelimiter({\\\"(\\\"}, QuoteStyle.Csv, false), {\\\"Parent org-base\\\", \\\"Parent org-acronym\\\"}),\\n    #\\\"Replaced ) in Parent org-acronym\\\" = Table.ReplaceValue(#\\\"Split Parent org-shortened by (\\\",\\\")\\\",\\\"\\\",Replacer.ReplaceText,{\\\"Parent org-acronym\\\"}),\\n    #\\\"Added Parent org-shortened\\\" = Table.AddColumn(#\\\"Replaced ) in Parent org-acronym\\\", \\\"Parent org-shortened\\\", each if [#\\\"Parent org-acronym\\\"] = null then [#\\\"Parent org-base\\\"] else [#\\\"Parent org-acronym\\\"])\\nin\\n    #\\\"Added Parent org-shortened\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "010_tblOrg-SplitChildren",
      "lineageTag": "42b5d267-e04d-452d-8632-c2fd925d80fc",
      "queryGroupId": "7c7cce0d-9bc6-4e8b-8de4-c13128042440",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"005_tblOrg-SplitParents\",",
        "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"Organisation\", \"Parent org\"}, {\"Organisation-Shortened\", \"Parent org-shortened\"}, {\"Parent org\", \"Organisation\"}, {\"URL\", \"URL-ParentOrg\"}, {\"Parent org-base\", \"Organisation-base\"}, {\"Parent org-acronym\", \"Organisation-acronym\"}, {\"Parent org-shortened\", \"Organisation-shortened\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"005_tblOrg-SplitParents\\\",\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(Source,{{\\\"Organisation\\\", \\\"Parent org\\\"}, {\\\"Organisation-Shortened\\\", \\\"Parent org-shortened\\\"}, {\\\"Parent org\\\", \\\"Organisation\\\"}, {\\\"URL\\\", \\\"URL-ParentOrg\\\"}, {\\\"Parent org-base\\\", \\\"Organisation-base\\\"}, {\\\"Parent org-acronym\\\", \\\"Organisation-acronym\\\"}, {\\\"Parent org-shortened\\\", \\\"Organisation-shortened\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "010_Hierarchy",
      "lineageTag": "1b0ff087-9ecd-4948-962c-1ed2335ff8c0",
      "queryGroupId": "7c7cce0d-9bc6-4e8b-8de4-c13128042440",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = \"World\",",
        "    #\"Converted to Table\" = #table(1, {{Source}}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Converted to Table\",{{\"Column1\", \"Level1\"}}),",
        "    #\"Merged Queries Level2\" = Table.NestedJoin(#\"Renamed Columns\", {\"Level1\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded Level2\" = Table.ExpandTableColumn(#\"Merged Queries Level2\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\", \"URL\"}, {\"Level2\", \"Lvl2\", \"Level2URL\"}),",
        "    #\"Merged Queries Level3\" = Table.NestedJoin(#\"Expanded Level2\", {\"Level2\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded Level3\" = Table.ExpandTableColumn(#\"Merged Queries Level3\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\", \"URL\"}, {\"Level3\", \"Lvl3\", \"Level3URL\"}),",
        "    #\"Merged Queries Level4\" = Table.NestedJoin(#\"Expanded Level3\", {\"Level3\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded Level4\" = Table.ExpandTableColumn(#\"Merged Queries Level4\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\", \"URL\"}, {\"Level4\", \"Lvl4\", \"Level4URL\"",
        "}),",
        "    #\"Merged Queries Level5\" = Table.NestedJoin(#\"Expanded Level4\", {\"Level4\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded Level5\" = Table.ExpandTableColumn(#\"Merged Queries Level5\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"Organisation-Shortened\", \"URL\"}, {\"Level5\", \"Lvl5\", \"Level5URL\"}),",
        "    #\"Merged Queries Level6\" = Table.NestedJoin(#\"Expanded Level5\", {\"Level5\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded Level6\" = Table.ExpandTableColumn(#\"Merged Queries Level6\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"URL\"}, {\"Level6\", \"Level6URL\"}),",
        "    #\"Merged Queries Level7\" = Table.NestedJoin(#\"Expanded Level6\", {\"Level6\"}, #\"005_tblOrg-SplitParents\", {\"Parent org\"}, \"005_tblOrg-SplitParents\", JoinKind.LeftOuter),",
        "    #\"Expanded Level7\" = Table.ExpandTableColumn(#\"Merged Queries Level7\", \"005_tblOrg-SplitParents\", {\"Organisation\", \"URL\"}, {\"Level7\", \"Level7URL\"}),",
        "    #\"Added URL-Combined\" = Table.AddColumn(#\"Expanded Level7\", \"URL-Combined\", each if [Level7] <> null then [Level7URL] else if [Level6] <> null then [Level6URL] else if [Level5] <> null then [Level5URL] else if [Level4] <> null then [Level4URL] else if [Level3] <> null then [Level3URL] else if [Level2] <> null then [Level2URL] else null),",
        "    #\"Sorted Rows\" = Table.Sort(#\"Added URL-Combined\",{{\"Level3\", Order.Ascending}}),",
        "    #\"Added LowestLevelOrg\" = Table.AddColumn(#\"Sorted Rows\", \"LowestLevelOrg\", each if [Level7] <> null then [Level7] else if [Level6] <> null then [Level6] else if [Level5] <> null then [Level5] else if [Level4] <> null then [Level4] else if [Level3] <> null then [Level3] else if [Level2] <> null then [Level2] else [Level1]),",
        "    #\"Replaced Value URL-Combined\" = Table.ReplaceValue(#\"Added LowestLevelOrg\",\"(\",\"https://\",Replacer.ReplaceText,{\"URL-Combined\"}),",
        "    #\"Replaced Value1 URL-Combined\" = Table.ReplaceValue(#\"Replaced Value URL-Combined\",\")\",\"\",Replacer.ReplaceText,{\"URL-Combined\"}),",
        "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Replaced Value1 URL-Combined\", \"URL-Combined\", Splitter.SplitTextByEachDelimiter({\"#(lf)\"}, QuoteStyle.Csv, false), {\"URL-Main\", \"URL-Secondary\"}),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Split Column by Delimiter\",null,\"No child orgs\",Replacer.ReplaceValue,{\"Level2\", \"Lvl2\", \"Level3\", \"Lvl3\", \"Level4\", \"Lvl4\", \"Level5\", \"Lvl5\", \"Level6\", \"Level7\"})",
        "in",
        "    #\"Replaced Value\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = \\\"World\\\",\\n    #\\\"Converted to Table\\\" = #table(1, {{Source}}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Converted to Table\\\",{{\\\"Column1\\\", \\\"Level1\\\"}}),\\n    #\\\"Merged Queries Level2\\\" = Table.NestedJoin(#\\\"Renamed Columns\\\", {\\\"Level1\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Level2\\\" = Table.ExpandTableColumn(#\\\"Merged Queries Level2\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"URL\\\"}, {\\\"Level2\\\", \\\"Lvl2\\\", \\\"Level2URL\\\"}),\\n    #\\\"Merged Queries Level3\\\" = Table.NestedJoin(#\\\"Expanded Level2\\\", {\\\"Level2\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Level3\\\" = Table.ExpandTableColumn(#\\\"Merged Queries Level3\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"URL\\\"}, {\\\"Level3\\\", \\\"Lvl3\\\", \\\"Level3URL\\\"}),\\n    #\\\"Merged Queries Level4\\\" = Table.NestedJoin(#\\\"Expanded Level3\\\", {\\\"Level3\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Level4\\\" = Table.ExpandTableColumn(#\\\"Merged Queries Level4\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"URL\\\"}, {\\\"Level4\\\", \\\"Lvl4\\\", \\\"Level4URL\\\"\\n}),\\n    #\\\"Merged Queries Level5\\\" = Table.NestedJoin(#\\\"Expanded Level4\\\", {\\\"Level4\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Level5\\\" = Table.ExpandTableColumn(#\\\"Merged Queries Level5\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"URL\\\"}, {\\\"Level5\\\", \\\"Lvl5\\\", \\\"Level5URL\\\"}),\\n    #\\\"Merged Queries Level6\\\" = Table.NestedJoin(#\\\"Expanded Level5\\\", {\\\"Level5\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Level6\\\" = Table.ExpandTableColumn(#\\\"Merged Queries Level6\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"URL\\\"}, {\\\"Level6\\\", \\\"Level6URL\\\"}),\\n    #\\\"Merged Queries Level7\\\" = Table.NestedJoin(#\\\"Expanded Level6\\\", {\\\"Level6\\\"}, #\\\"005_tblOrg-SplitParents\\\", {\\\"Parent org\\\"}, \\\"005_tblOrg-SplitParents\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Level7\\\" = Table.ExpandTableColumn(#\\\"Merged Queries Level7\\\", \\\"005_tblOrg-SplitParents\\\", {\\\"Organisation\\\", \\\"URL\\\"}, {\\\"Level7\\\", \\\"Level7URL\\\"}),\\n    #\\\"Added URL-Combined\\\" = Table.AddColumn(#\\\"Expanded Level7\\\", \\\"URL-Combined\\\", each if [Level7] <> null then [Level7URL] else if [Level6] <> null then [Level6URL] else if [Level5] <> null then [Level5URL] else if [Level4] <> null then [Level4URL] else if [Level3] <> null then [Level3URL] else if [Level2] <> null then [Level2URL] else null),\\n    #\\\"Sorted Rows\\\" = Table.Sort(#\\\"Added URL-Combined\\\",{{\\\"Level3\\\", Order.Ascending}}),\\n    #\\\"Added LowestLevelOrg\\\" = Table.AddColumn(#\\\"Sorted Rows\\\", \\\"LowestLevelOrg\\\", each if [Level7] <> null then [Level7] else if [Level6] <> null then [Level6] else if [Level5] <> null then [Level5] else if [Level4] <> null then [Level4] else if [Level3] <> null then [Level3] else if [Level2] <> null then [Level2] else [Level1]),\\n    #\\\"Replaced Value URL-Combined\\\" = Table.ReplaceValue(#\\\"Added LowestLevelOrg\\\",\\\"(\\\",\\\"https://\\\",Replacer.ReplaceText,{\\\"URL-Combined\\\"}),\\n    #\\\"Replaced Value1 URL-Combined\\\" = Table.ReplaceValue(#\\\"Replaced Value URL-Combined\\\",\\\")\\\",\\\"\\\",Replacer.ReplaceText,{\\\"URL-Combined\\\"}),\\n    #\\\"Split Column by Delimiter\\\" = Table.SplitColumn(#\\\"Replaced Value1 URL-Combined\\\", \\\"URL-Combined\\\", Splitter.SplitTextByEachDelimiter({\\\"#(lf)\\\"}, QuoteStyle.Csv, false), {\\\"URL-Main\\\", \\\"URL-Secondary\\\"}),\\n    #\\\"Replaced Value\\\" = Table.ReplaceValue(#\\\"Split Column by Delimiter\\\",null,\\\"No child orgs\\\",Replacer.ReplaceValue,{\\\"Level2\\\", \\\"Lvl2\\\", \\\"Level3\\\", \\\"Lvl3\\\", \\\"Level4\\\", \\\"Lvl4\\\", \\\"Level5\\\", \\\"Lvl5\\\", \\\"Level6\\\", \\\"Level7\\\"})\\nin\\n    #\\\"Replaced Value\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "005_tblOrg-SplitURLs",
      "lineageTag": "ae69c755-2b13-4306-8f9f-f1b43023c04f",
      "queryGroupId": "7e7f840f-ae98-45a0-835c-527fa55935d5",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"URL\"}),",
        "    #\"URL replaced (https:// with (\" = Table.ReplaceValue(#\"Removed Other Columns\",\"(https://\",\"(\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"URL replaced ( with https://\" = Table.ReplaceValue(#\"URL replaced (https:// with (\",\"(\",\"https://\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"URL replaced ) with blank\" = Table.ReplaceValue(#\"URL replaced ( with https://\",\")\",\"\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"URL replaced ) with blank\", each ([URL] <> \"\")),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Filtered Rows\", \"URLWithMain\", each \"(main)\"&[URL]),",
        "    #\"Split URL by linefeed\" = Table.ExpandListColumn(Table.TransformColumns(#\"Added Custom\", {{\"URLWithMain\", Splitter.SplitTextByDelimiter(\"#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"URLWithMain\"),",
        "    #\"Added IsMain\" = Table.AddColumn(#\"Split URL by linefeed\", \"IsMain\", each if Text.StartsWith([URLWithMain], \"(main)\") then \"Main\" else \"Secondary\"),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Added IsMain\",\"(main)\",\"\",Replacer.ReplaceText,{\"URLWithMain\"}),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Replaced Value\",{\"URL\"})",
        "in",
        "    #\"Removed Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "005_tblOrg-SplitContacts",
      "lineageTag": "c43c1bb0-3fe9-444a-955f-d7ce389a18e0",
      "queryGroupId": "7e7f840f-ae98-45a0-835c-527fa55935d5",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Key Contacts\"}),",
        "    #\"Filtered Rows1\" = Table.SelectRows(#\"Removed Other Columns\", each ([Key Contacts] <> \"\")),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Filtered Rows1\", \"KeyContactsWithMarker\", each \"(main)\" & [Key Contacts]),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Added Custom\", {{\"KeyContactsWithMarker\", Splitter.SplitTextByDelimiter(\"#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"KeyContactsWithMarker\"),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Split Column by Delimiter\", \"KeyContactsWithMarker\", Splitter.SplitTextByEachDelimiter({\",\"}, QuoteStyle.Csv, false), {\"Name\", \"TitleAndLink\"}),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Split Column by Delimiter1\",\"(\",\"(https://\",Replacer.ReplaceText,{\"TitleAndLink\"}),",
        "    #\"Split Column by Delimiter2\" = Table.SplitColumn(#\"Replaced Value\", \"TitleAndLink\", Splitter.SplitTextByEachDelimiter({\"(\"}, QuoteStyle.Csv, false), {\"Title\", \"Link\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Split Column by Delimiter2\",\")\",\"\",Replacer.ReplaceText,{\"Link\"}),",
        "    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value1\", \"IsMain\", each if Text.StartsWith([Name], \"(main)\") then \"Main\" else \"Secondary\"),",
        "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Added Conditional Column\",\"(main)\",\"\",Replacer.ReplaceText,{\"Name\"}),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Replaced Value2\",{\"Key Contacts\"})",
        "in",
        "    #\"Removed Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "005_tblOrg-events-count",
      "lineageTag": "30045c78-3f0a-426d-b3c8-43f53a7342b6",
      "queryGroupId": "5c2e8db2-501f-4df5-8470-e49160f33be3",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened\", \"Status\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"Status\", Splitter.SplitTextByDelimiter(\"#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Status\"),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Split Column by Delimiter\", each ([Status] <> \"\" and [Status] <> \"Active!\" and [Status] <> \"Formerly in CSIRO\" and [Status] <> \"Inactive\" and [Status] <> \"Not Yet Active\")),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Filtered Rows\", \"Status\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Date\", \"Event\"}),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Split Column by Delimiter1\",\":\",\"\",Replacer.ReplaceText,{\"Date\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"Date\", type date}}),",
        "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Changed Type\"),",
        "    #\"Sorted Rows\" = Table.Sort(#\"Removed Errors\",{{\"Date\", Order.Descending}}),",
        "    #\"Added Index\" = Table.AddIndexColumn(#\"Sorted Rows\", \"Index\", 1, 1, Int64.Type),",
        "    #\"Sorted Rows1\" = Table.Sort(#\"Added Index\",{{\"Date\", Order.Ascending}, {\"Organisation\", Order.Ascending}}),",
        "    #\"Added Index1\" = Table.AddIndexColumn(#\"Sorted Rows1\", \"Index-Asc-ByOrgDate\", 1, 1, Int64.Type),",
        "    #\"Sorted Rows2\" = Table.Sort(#\"Added Index1\",{{\"Date\", Order.Ascending}}),",
        "    #\"Added Index2\" = Table.AddIndexColumn(#\"Sorted Rows2\", \"Index-Asc-ByDate\", 1, 1, Int64.Type),",
        "    #\"Added Index3\" = Table.AddIndexColumn(#\"Added Index2\", \"Index-Asc-ByDate-ForMerge\", 0, 1, Int64.Type),",
        "    #\"Counted Rows\" = Table.RowCount(#\"Added Index3\")",
        "in",
        "    #\"Counted Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Number",
      "isHidden": false
    },
    {
      "name": "005_tblOrg-events-ForMerge",
      "lineageTag": "f65ee772-89bb-483a-b5c9-ffe30f87eb83",
      "queryGroupId": "5c2e8db2-501f-4df5-8470-e49160f33be3",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened\", \"Status\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"Status\", Splitter.SplitTextByDelimiter(\"#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Status\"),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Split Column by Delimiter\", each ([Status] <> \"\" and [Status] <> \"Active!\" and [Status] <> \"Formerly in CSIRO\" and [Status] <> \"Inactive\" and [Status] <> \"Not Yet Active\")),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Filtered Rows\", \"Status\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Date\", \"Event\"}),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Split Column by Delimiter1\",\":\",\"\",Replacer.ReplaceText,{\"Date\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"Date\", type date}}),",
        "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Changed Type\"),",
        "    #\"Sorted Rows\" = Table.Sort(#\"Removed Errors\",{{\"Date\", Order.Descending}}),",
        "    #\"Added Index\" = Table.AddIndexColumn(#\"Sorted Rows\", \"Index\", 1, 1, Int64.Type),",
        "    #\"Sorted Rows1\" = Table.Sort(#\"Added Index\",{{\"Date\", Order.Ascending}, {\"Organisation\", Order.Ascending}}),",
        "    #\"Added Index1\" = Table.AddIndexColumn(#\"Sorted Rows1\", \"Index-Asc-ByOrgDate\", 1, 1, Int64.Type),",
        "    #\"Sorted Rows2\" = Table.Sort(#\"Added Index1\",{{\"Date\", Order.Ascending}}),",
        "    #\"Added Index2\" = Table.AddIndexColumn(#\"Sorted Rows2\", \"Index-Asc-ByDate\", 1, 1, Int64.Type),",
        "    #\"Added Index3\" = Table.AddIndexColumn(#\"Added Index2\", \"Index-Asc-ByDate-ForMerge\", 0, 1, Int64.Type)",
        "in",
        "    #\"Added Index3\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "010_tblOrg-events",
      "lineageTag": "9f834d2d-90e0-4bb6-8894-9909d97afe40",
      "queryGroupId": "5c2e8db2-501f-4df5-8470-e49160f33be3",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened\", \"Status\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Removed Other Columns\", {{\"Status\", Splitter.SplitTextByDelimiter(\"#(lf)\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Status\"),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Split Column by Delimiter\", each ([Status] <> \"\" and [Status] <> \"Active!\" and [Status] <> \"Formerly in CSIRO\" and [Status] <> \"Inactive\" and [Status] <> \"Not Yet Active\")),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Filtered Rows\", \"Status\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Date\", \"Event\"}),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Split Column by Delimiter1\",\":\",\"\",Replacer.ReplaceText,{\"Date\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"Date\", type date}}),",
        "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Changed Type\"),",
        "    #\"Sorted Rows\" = Table.Sort(#\"Removed Errors\",{{\"Date\", Order.Descending}}),",
        "    #\"Added Index\" = Table.AddIndexColumn(#\"Sorted Rows\", \"Index\", 1, 1, Int64.Type),",
        "    #\"Sorted Rows1\" = Table.Sort(#\"Added Index\",{{\"Date\", Order.Ascending}, {\"Organisation\", Order.Ascending}}),",
        "    #\"Added Index1\" = Table.AddIndexColumn(#\"Sorted Rows1\", \"Index-Asc-ByOrgDate\", 1, 1, Int64.Type),",
        "    #\"Sorted Rows2\" = Table.Sort(#\"Added Index1\",{{\"Date\", Order.Ascending}}),",
        "    #\"Added Index2\" = Table.AddIndexColumn(#\"Sorted Rows2\", \"Index-Asc-ByDate\", 1, 1, Int64.Type),",
        "    #\"Replaced Value13\" = Table.ReplaceValue(#\"Added Index2\",\"Founded\",\"founded\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value13\",\"Active\",\"⚡ Active\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"launch\",\"🚀 launch\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"Merge\",\"🤝 Merge\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"inactive\",\"💤 inactive\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value18\" = Table.ReplaceValue(#\"Replaced Value6\",\"Inactive\",\"💤 inactive\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value18\",\"founded\",\"👶 founded\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"ended\",\"🪦 ended\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value2\",\"created\",\"👶 created\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"started\",\"👶 started\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"moved\",\"🤝moved\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"application\",\"📋 application\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"incorporated\",\"👶 incorporated\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value12\" = Table.ReplaceValue(#\"Replaced Value11\",\"announced\",\"📢 announced\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value14\" = Table.ReplaceValue(#\"Replaced Value12\",\"concept\",\"💡 concept\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value15\" = Table.ReplaceValue(#\"Replaced Value14\",\"milestone\",\"🎯 milestone\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value16\" = Table.ReplaceValue(#\"Replaced Value15\",\"active\",\"⚡ active\",Replacer.ReplaceValue,{\"Event\"}),",
        "    #\"Replaced Value17\" = Table.ReplaceValue(#\"Replaced Value16\",\"published\",\"📄 published\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value19\" = Table.ReplaceValue(#\"Replaced Value17\",\"consultation\",\"👥 consultation\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value20\" = Table.ReplaceValue(#\"Replaced Value19\",\"start\",\"⚡ start\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value21\" = Table.ReplaceValue(#\"Replaced Value20\",\"Start\",\"⚡ start\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value22\" = Table.ReplaceValue(#\"Replaced Value21\",\"occurred\",\"📅 occurred\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Replaced Value23\" = Table.ReplaceValue(#\"Replaced Value22\",\"event\",\"📅 event\",Replacer.ReplaceText,{\"Event\"}),",
        "    #\"Added Event-Type\" = Table.AddColumn(#\"Replaced Value23\", \"Event-Type\", each if Text.Contains([Event], \"👶\") then \"- 👶 founded\" else if Text.Contains([Event], \"🪦\") then \"-🪦ended\" else if Text.Contains([Event], \"🤝\") then \"- 🤝 merged\" else if Text.Contains([Event], \"💤\") then \"- 💤 inactive\" else if Text.Contains([Event], \"📋\") then \"- 📋 application\" else if Text.Contains([Event], \"⚡\") then \"- ⚡ active\" else if Text.Contains([Event], \"📢\") then \"- 📢 announced\" else if Text.Contains([Event], \"💡\") then \"-💡 concept\" else if Text.Contains([Event], \"📅 \") then \"- 📅  event\" else if Text.Contains([Event], \"🚀\") then \"- 🚀 launch\" else if Text.Contains([Event], \"👥\") then \"- 👥 consultation\" else if Text.Contains([Event], \"📄\") then \"- 📄 published\" else \"- Misc\"),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Added Event-Type\", {\"Index-Asc-ByDate\"}, #\"005_tblOrg-events-ForMerge\", {\"Index-Asc-ByDate-ForMerge\"}, \"005_tblOrg-events-ForMerge\", JoinKind.LeftOuter),",
        "    #\"Expanded 005_tblOrg-events-ForMerge\" = Table.ExpandTableColumn(#\"Merged Queries\", \"005_tblOrg-events-ForMerge\", {\"Date\"}, {\"Date-NextEntry\"}),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Expanded 005_tblOrg-events-ForMerge\", \"DaysSincePreviousEntry\", each [#\"Date-NextEntry\"]-[Date]),",
        "    #\"Replaced Value24\" = Table.ReplaceValue(#\"Added Custom\",null,#duration(0, 0, 0, 0),Replacer.ReplaceValue,{\"DaysSincePreviousEntry\"}),",
        "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Replaced Value24\",{{\"DaysSincePreviousEntry\", Int64.Type}}),",
        "    #\"Added Conditional Column\" = Table.AddColumn(#\"Changed Type1\", \"Index-Asc-ByDate-WithJumps\", each if [DaysSincePreviousEntry] > 61 then [#\"Index-Asc-ByDate\"] else (Number.RandomBetween(1,10)*[#\"Index-Asc-ByDate\"])),",
        "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Added Conditional Column\",{{\"Index-Asc-ByDate-WithJumps\", type number}}),",
        "    Custom1 = Table.AddColumn(#\"Changed Type2\", \"Event-Icon\", each if Text.Contains([Event], \"👶\") then \"👶\" else if Text.Contains([Event], \"🪦\") then \"🪦\" else if Text.Contains([Event], \"🤝\") then \"🤝\" else if Text.Contains([Event], \"💤\") then \"💤\" else if Text.Contains([Event], \"📋\") then \"📋\" else if Text.Contains([Event], \"⚡\") then \"⚡\" else if Text.Contains([Event], \"📢\") then \"📢\" else if Text.Contains([Event], \"💡\") then \"💡\" else if Text.Contains([Event], \"📅 \") then \"📅 \" else if Text.Contains([Event], \"🚀\") then \"🚀\" else if Text.Contains([Event], \"👥\") then \"👥\" else if Text.Contains([Event], \"📄\") then \"📄\" else \"❔\")",
        "in",
        "    Custom1"
      ],
      "isDirectQuery": false,
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "010_tblOrg-Formatting",
      "lineageTag": "b515d12b-1bca-4180-9b56-1111d984fc1b",
      "queryGroupId": "7e7f840f-ae98-45a0-835c-527fa55935d5",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"URL replaced (https:// with (\" = Table.ReplaceValue(Source,\"(https://\",\"(\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"URL replaced ( with https://\" = Table.ReplaceValue(#\"URL replaced (https:// with (\",\"(\",\"https://\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"URL replaced ) with blank\" = Table.ReplaceValue(#\"URL replaced ( with https://\",\")\",\"\",Replacer.ReplaceText,{\"URL\"}),",
        "    #\"Split URL by linefeed\" = Table.SplitColumn(#\"URL replaced ) with blank\", \"URL\", Splitter.SplitTextByEachDelimiter({\"#(lf)\"}, QuoteStyle.Csv, false), {\"URL-Main\", \"URL-Secondary\"}),",
        "    #\"Added ActiveOrNot\" = Table.AddColumn(#\"Split URL by linefeed\", \"ActiveOrNot\", each if Text.StartsWith([Status], \"Active\") then \"⚡ active\" else if Text.StartsWith([Status], \"Inactive\") then \"💤 inactive\" else if Text.StartsWith([Status], \"To Be Active\") then \"⏳ To Be Active\" else \"❔ unknown\"),",
        "    #\"Added OrgStructure\" = Table.AddColumn(#\"Added ActiveOrNot\", \"OrgStructure\", each if Text.Contains([Activities AI], \"Company private\") then \"Company private\" else if Text.Contains([Activities AI], \"Company public\") then \"Company public\" else if Text.Contains([Activities AI], \"Charity / nonprofit\") then \"Charity / nonprofit\" else if Text.Contains([Activities AI], \"Approved research institute\") then \"Approved research institute (ARI)\" else if Text.Contains([Activities AI], \"Government federal\") then \"Government federal\" else if Text.Contains([Activities AI], \"Government state\") then \"Government state\" else \"No structure selected\"),",
        "    #\"Added Conditional Column\" = Table.AddColumn(#\"Added OrgStructure\", \"Country\", each if Text.Contains([Location], \"Australia\") then \"Australia\" else if Text.Contains([Location], \" AU \") then \"Australia\" else \"Not Australia\")",
        "in",
        "    #\"Added Conditional Column\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "015_tblOrg-BaseNameForMerge",
      "lineageTag": "e6b73457-b824-4220-ada8-ced939fb73af",
      "queryGroupId": "c0e891d5-b670-413b-86c8-b9e823090619",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"010_tblOrg-Formatting\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened.1\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Organisation-Shortened.1\", \"OrganisationForWordcloud\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "015_tblOrg-AcronymForMerge",
      "lineageTag": "77669451-2630-49bf-bcb3-61a7af4b55ee",
      "queryGroupId": "c0e891d5-b670-413b-86c8-b9e823090619",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"010_tblOrg-Formatting\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Organisation-Shortened.2\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each ([#\"Organisation-Shortened.2\"] <> null)),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"Organisation-Shortened.2\", \"OrganisationForWordcloud\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "005_ActivitiesSplit",
      "lineageTag": "7e5cc78f-95af-42ad-88c8-b737dfaef4fe",
      "queryGroupId": "7e7f840f-ae98-45a0-835c-527fa55935d5",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"000_tblOrg\",",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Organisation\", \"Activities AI\"}),",
        "    #\"Replaced Value15\" = Table.ReplaceValue(#\"Removed Other Columns\",\"Charity / nonprofit\",\"Charity/nonprofit\",Replacer.ReplaceText,{\"Activities AI\"}),",
        "    #\"Split Column by Delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Replaced Value15\", {{\"Activities AI\", Splitter.SplitTextByDelimiter(\", \", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"Activities AI\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Activities AI\", type text}}),",
        "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Changed Type\", \"Activities AI\", \"Activities AI-shortened\"),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Duplicated Column\",\"mid-career\",\"mid\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"No specific AI focus\",\"None\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"government\",\"govt\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"Coworking\",\"Cowork\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Advocacy\",\"Advoc.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"Research\",\"Rsrch\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"Advisory\",\"Advis.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"capabilities\",\"capab.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Charity / nonprofit\",\"Nonprofit\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"existential\",\"exist.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value9\",\"catastrophic\",\"catast.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value11\",\"mundane\",\"mund.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value12\" = Table.ReplaceValue(#\"Replaced Value10\",\"commercial\",\"commrc.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value13\" = Table.ReplaceValue(#\"Replaced Value12\",\"Company\",\"Co.\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Replaced Value14\" = Table.ReplaceValue(#\"Replaced Value13\",\"Nonprofit\",\"NPO\",Replacer.ReplaceText,{\"Activities AI-shortened\"}),",
        "    #\"Added Activities-Explainer\" = Table.AddColumn(#\"Replaced Value14\", \"Activities-Explainer\", each if [Activities AI] = \"Talent early\" then \"Gets more people into the talent pipeline.#(#)(#)(#)(#)(cr)#(#)(#)(#)(#)(lf) Allows minimal or <3 years experience with no qualifications.\" else if [Activities AI] = \"Talent mid-career\" then \"For moderately experienced peeps in AI safety, or experienced people in other fields transitioning over.\" else if [Activities AI] = \"Research policy\" then \"Creates policy proposals and researches governance structures.\" else if [Activities AI] = \"Research safety mundane\" then \"Looks at mundane harms that society already has coping mechanisms for. E.g. deepfakes, cheating on school exams.\" else if [Activities AI] = \"Research safety existential\" then \"Explores AI ability to hurt thousands or cost billions\" else if [Activities AI] = \"Company private\" then \"Commercial incentives & no public oversight but also not suable for not maximising shareholder profits.\" else if [Activities AI] = \"Company public\" then \"Commercial incentives & public oversight but suable for not maxxing profits.\" else if [Activities AI] = \"Research capabilities\" then \"Improves AI capabilities, i.e. letting it do stuff whether safe or not.\" else if [Activities AI] = \"Research safety catastrophic\" then \"Explores AI ability to hurt thousands or cost billions\" else if [Activities AI] = \"Advis. public\" then \"Informs public in neutral way\" else if [Activities AI] = \"Advoc. public\" then \"Advocates for particular actions\" else null),",
        "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Added Activities-Explainer\", \"Activities AI-shortened\", \"Activities AI - Level\"),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Duplicated Column1\", \"Activities AI - Level\", Splitter.SplitTextByDelimiter(\" \", QuoteStyle.Csv), {\"Activities AI - Level.1\", \"Activities AI - Level.2\", \"Activities AI - Level.3\"}),",
        "    #\"Replaced Value16\" = Table.ReplaceValue(#\"Split Column by Delimiter1\",\"None\",\"No specific AI focus\",Replacer.ReplaceText,{\"Activities AI-shortened\", \"Activities AI\", \"Activities AI - Level.1\"})",
        "in",
        "    #\"Replaced Value16\""
      ],
      "isDirectQuery": false,
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Activity",
      "lineageTag": "d743bfa4-b32b-4f80-9569-a8db58bab608",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"005_ActivitiesSplit\"",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"000_tblOrg\\\",\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"Organisation\\\", \\\"Activities AI\\\"}),\\n    #\\\"Replaced Value15\\\" = Table.ReplaceValue(#\\\"Removed Other Columns\\\",\\\"Charity / nonprofit\\\",\\\"Charity/nonprofit\\\",Replacer.ReplaceText,{\\\"Activities AI\\\"}),\\n    #\\\"Split Column by Delimiter\\\" = Table.ExpandListColumn(Table.TransformColumns(#\\\"Replaced Value15\\\", {{\\\"Activities AI\\\", Splitter.SplitTextByDelimiter(\\\", \\\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \\\"Activities AI\\\"),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Split Column by Delimiter\\\",{{\\\"Activities AI\\\", type text}}),\\n    #\\\"Duplicated Column\\\" = Table.DuplicateColumn(#\\\"Changed Type\\\", \\\"Activities AI\\\", \\\"Activities AI-shortened\\\"),\\n    #\\\"Replaced Value\\\" = Table.ReplaceValue(#\\\"Duplicated Column\\\",\\\"mid-career\\\",\\\"mid\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value1\\\" = Table.ReplaceValue(#\\\"Replaced Value\\\",\\\"No specific AI focus\\\",\\\"None\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value2\\\" = Table.ReplaceValue(#\\\"Replaced Value1\\\",\\\"government\\\",\\\"govt\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value3\\\" = Table.ReplaceValue(#\\\"Replaced Value2\\\",\\\"Coworking\\\",\\\"Cowork\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value4\\\" = Table.ReplaceValue(#\\\"Replaced Value3\\\",\\\"Advocacy\\\",\\\"Advoc.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value5\\\" = Table.ReplaceValue(#\\\"Replaced Value4\\\",\\\"Research\\\",\\\"Rsrch\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value6\\\" = Table.ReplaceValue(#\\\"Replaced Value5\\\",\\\"Advisory\\\",\\\"Advis.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value7\\\" = Table.ReplaceValue(#\\\"Replaced Value6\\\",\\\"capabilities\\\",\\\"capab.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value8\\\" = Table.ReplaceValue(#\\\"Replaced Value7\\\",\\\"Charity / nonprofit\\\",\\\"Nonprofit\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value9\\\" = Table.ReplaceValue(#\\\"Replaced Value8\\\",\\\"existential\\\",\\\"exist.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value11\\\" = Table.ReplaceValue(#\\\"Replaced Value9\\\",\\\"catastrophic\\\",\\\"catast.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value10\\\" = Table.ReplaceValue(#\\\"Replaced Value11\\\",\\\"mundane\\\",\\\"mund.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value12\\\" = Table.ReplaceValue(#\\\"Replaced Value10\\\",\\\"commercial\\\",\\\"commrc.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value13\\\" = Table.ReplaceValue(#\\\"Replaced Value12\\\",\\\"Company\\\",\\\"Co.\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Replaced Value14\\\" = Table.ReplaceValue(#\\\"Replaced Value13\\\",\\\"Nonprofit\\\",\\\"NPO\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\"}),\\n    #\\\"Added Activities-Explainer\\\" = Table.AddColumn(#\\\"Replaced Value14\\\", \\\"Activities-Explainer\\\", each if [Activities AI] = \\\"Talent early\\\" then \\\"Gets more people into the talent pipeline.#(#)(#)(#)(#)(cr)#(#)(#)(#)(#)(lf) Allows minimal or <3 years experience with no qualifications.\\\" else if [Activities AI] = \\\"Talent mid-career\\\" then \\\"For moderately experienced peeps in AI safety, or experienced people in other fields transitioning over.\\\" else if [Activities AI] = \\\"Research policy\\\" then \\\"Creates policy proposals and researches governance structures.\\\" else if [Activities AI] = \\\"Research safety mundane\\\" then \\\"Looks at mundane harms that society already has coping mechanisms for. E.g. deepfakes, cheating on school exams.\\\" else if [Activities AI] = \\\"Research safety existential\\\" then \\\"Explores AI ability to hurt thousands or cost billions\\\" else if [Activities AI] = \\\"Company private\\\" then \\\"Commercial incentives & no public oversight but also not suable for not maximising shareholder profits.\\\" else if [Activities AI] = \\\"Company public\\\" then \\\"Commercial incentives & public oversight but suable for not maxxing profits.\\\" else if [Activities AI] = \\\"Research capabilities\\\" then \\\"Improves AI capabilities, i.e. letting it do stuff whether safe or not.\\\" else if [Activities AI] = \\\"Research safety catastrophic\\\" then \\\"Explores AI ability to hurt thousands or cost billions\\\" else if [Activities AI] = \\\"Advis. public\\\" then \\\"Informs public in neutral way\\\" else if [Activities AI] = \\\"Advoc. public\\\" then \\\"Advocates for particular actions\\\" else null),\\n    #\\\"Duplicated Column1\\\" = Table.DuplicateColumn(#\\\"Added Activities-Explainer\\\", \\\"Activities AI-shortened\\\", \\\"Activities AI - Level\\\"),\\n    #\\\"Split Column by Delimiter1\\\" = Table.SplitColumn(#\\\"Duplicated Column1\\\", \\\"Activities AI - Level\\\", Splitter.SplitTextByDelimiter(\\\" \\\", QuoteStyle.Csv), {\\\"Activities AI - Level.1\\\", \\\"Activities AI - Level.2\\\", \\\"Activities AI - Level.3\\\"}),\\n    #\\\"Replaced Value16\\\" = Table.ReplaceValue(#\\\"Split Column by Delimiter1\\\",\\\"None\\\",\\\"No specific AI focus\\\",Replacer.ReplaceText,{\\\"Activities AI-shortened\\\", \\\"Activities AI\\\", \\\"Activities AI - Level.1\\\"})\\nin\\n    #\\\"Replaced Value16\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Event",
      "lineageTag": "32d25435-011d-4f2d-b13a-f73159591caa",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"010_tblOrg-events\"",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"000_tblOrg\\\",\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"Organisation\\\", \\\"Organisation-Shortened\\\", \\\"Status\\\"}),\\n    #\\\"Split Column by Delimiter\\\" = Table.ExpandListColumn(Table.TransformColumns(#\\\"Removed Other Columns\\\", {{\\\"Status\\\", Splitter.SplitTextByDelimiter(\\\"#(lf)\\\", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \\\"Status\\\"),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Split Column by Delimiter\\\", each ([Status] <> \\\"\\\" and [Status] <> \\\"Active!\\\" and [Status] <> \\\"Formerly in CSIRO\\\" and [Status] <> \\\"Inactive\\\" and [Status] <> \\\"Not Yet Active\\\")),\\n    #\\\"Split Column by Delimiter1\\\" = Table.SplitColumn(#\\\"Filtered Rows\\\", \\\"Status\\\", Splitter.SplitTextByEachDelimiter({\\\" \\\"}, QuoteStyle.Csv, false), {\\\"Date\\\", \\\"Event\\\"}),\\n    #\\\"Replaced Value\\\" = Table.ReplaceValue(#\\\"Split Column by Delimiter1\\\",\\\":\\\",\\\"\\\",Replacer.ReplaceText,{\\\"Date\\\"}),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Replaced Value\\\",{{\\\"Date\\\", type date}}),\\n    #\\\"Removed Errors\\\" = Table.RemoveRowsWithErrors(#\\\"Changed Type\\\"),\\n    #\\\"Sorted Rows\\\" = Table.Sort(#\\\"Removed Errors\\\",{{\\\"Date\\\", Order.Descending}}),\\n    #\\\"Added Index\\\" = Table.AddIndexColumn(#\\\"Sorted Rows\\\", \\\"Index\\\", 1, 1, Int64.Type),\\n    #\\\"Sorted Rows1\\\" = Table.Sort(#\\\"Added Index\\\",{{\\\"Date\\\", Order.Ascending}, {\\\"Organisation\\\", Order.Ascending}}),\\n    #\\\"Added Index1\\\" = Table.AddIndexColumn(#\\\"Sorted Rows1\\\", \\\"Index-Asc-ByOrgDate\\\", 1, 1, Int64.Type),\\n    #\\\"Sorted Rows2\\\" = Table.Sort(#\\\"Added Index1\\\",{{\\\"Date\\\", Order.Ascending}}),\\n    #\\\"Added Index2\\\" = Table.AddIndexColumn(#\\\"Sorted Rows2\\\", \\\"Index-Asc-ByDate\\\", 1, 1, Int64.Type),\\n    #\\\"Replaced Value13\\\" = Table.ReplaceValue(#\\\"Added Index2\\\",\\\"Founded\\\",\\\"founded\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value3\\\" = Table.ReplaceValue(#\\\"Replaced Value13\\\",\\\"Active\\\",\\\"⚡ Active\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value4\\\" = Table.ReplaceValue(#\\\"Replaced Value3\\\",\\\"launch\\\",\\\"🚀 launch\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value5\\\" = Table.ReplaceValue(#\\\"Replaced Value4\\\",\\\"Merge\\\",\\\"🤝 Merge\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value6\\\" = Table.ReplaceValue(#\\\"Replaced Value5\\\",\\\"inactive\\\",\\\"💤 inactive\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value18\\\" = Table.ReplaceValue(#\\\"Replaced Value6\\\",\\\"Inactive\\\",\\\"💤 inactive\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value1\\\" = Table.ReplaceValue(#\\\"Replaced Value18\\\",\\\"founded\\\",\\\"👶 founded\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value2\\\" = Table.ReplaceValue(#\\\"Replaced Value1\\\",\\\"ended\\\",\\\"🪦 ended\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value7\\\" = Table.ReplaceValue(#\\\"Replaced Value2\\\",\\\"created\\\",\\\"👶 created\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value8\\\" = Table.ReplaceValue(#\\\"Replaced Value7\\\",\\\"started\\\",\\\"👶 started\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value9\\\" = Table.ReplaceValue(#\\\"Replaced Value8\\\",\\\"moved\\\",\\\"🤝moved\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value10\\\" = Table.ReplaceValue(#\\\"Replaced Value9\\\",\\\"application\\\",\\\"📋 application\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value11\\\" = Table.ReplaceValue(#\\\"Replaced Value10\\\",\\\"incorporated\\\",\\\"👶 incorporated\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value12\\\" = Table.ReplaceValue(#\\\"Replaced Value11\\\",\\\"announced\\\",\\\"📢 announced\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value14\\\" = Table.ReplaceValue(#\\\"Replaced Value12\\\",\\\"concept\\\",\\\"💡 concept\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value15\\\" = Table.ReplaceValue(#\\\"Replaced Value14\\\",\\\"milestone\\\",\\\"🎯 milestone\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value16\\\" = Table.ReplaceValue(#\\\"Replaced Value15\\\",\\\"active\\\",\\\"⚡ active\\\",Replacer.ReplaceValue,{\\\"Event\\\"}),\\n    #\\\"Replaced Value17\\\" = Table.ReplaceValue(#\\\"Replaced Value16\\\",\\\"published\\\",\\\"📄 published\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value19\\\" = Table.ReplaceValue(#\\\"Replaced Value17\\\",\\\"consultation\\\",\\\"👥 consultation\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value20\\\" = Table.ReplaceValue(#\\\"Replaced Value19\\\",\\\"start\\\",\\\"⚡ start\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value21\\\" = Table.ReplaceValue(#\\\"Replaced Value20\\\",\\\"Start\\\",\\\"⚡ start\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value22\\\" = Table.ReplaceValue(#\\\"Replaced Value21\\\",\\\"occurred\\\",\\\"📅 occurred\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Replaced Value23\\\" = Table.ReplaceValue(#\\\"Replaced Value22\\\",\\\"event\\\",\\\"📅 event\\\",Replacer.ReplaceText,{\\\"Event\\\"}),\\n    #\\\"Added Event-Type\\\" = Table.AddColumn(#\\\"Replaced Value23\\\", \\\"Event-Type\\\", each if Text.Contains([Event], \\\"👶\\\") then \\\"- 👶 founded\\\" else if Text.Contains([Event], \\\"🪦\\\") then \\\"-🪦ended\\\" else if Text.Contains([Event], \\\"🤝\\\") then \\\"- 🤝 merged\\\" else if Text.Contains([Event], \\\"💤\\\") then \\\"- 💤 inactive\\\" else if Text.Contains([Event], \\\"📋\\\") then \\\"- 📋 application\\\" else if Text.Contains([Event], \\\"⚡\\\") then \\\"- ⚡ active\\\" else if Text.Contains([Event], \\\"📢\\\") then \\\"- 📢 announced\\\" else if Text.Contains([Event], \\\"💡\\\") then \\\"-💡 concept\\\" else if Text.Contains([Event], \\\"📅 \\\") then \\\"- 📅  event\\\" else if Text.Contains([Event], \\\"🚀\\\") then \\\"- 🚀 launch\\\" else if Text.Contains([Event], \\\"👥\\\") then \\\"- 👥 consultation\\\" else if Text.Contains([Event], \\\"📄\\\") then \\\"- 📄 published\\\" else \\\"- Misc\\\"),\\n    #\\\"Merged Queries\\\" = Table.NestedJoin(#\\\"Added Event-Type\\\", {\\\"Index-Asc-ByDate\\\"}, #\\\"005_tblOrg-events-ForMerge\\\", {\\\"Index-Asc-ByDate-ForMerge\\\"}, \\\"005_tblOrg-events-ForMerge\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded 005_tblOrg-events-ForMerge\\\" = Table.ExpandTableColumn(#\\\"Merged Queries\\\", \\\"005_tblOrg-events-ForMerge\\\", {\\\"Date\\\"}, {\\\"Date-NextEntry\\\"}),\\n    #\\\"Added Custom\\\" = Table.AddColumn(#\\\"Expanded 005_tblOrg-events-ForMerge\\\", \\\"DaysSincePreviousEntry\\\", each [#\\\"Date-NextEntry\\\"]-[Date]),\\n    #\\\"Replaced Value24\\\" = Table.ReplaceValue(#\\\"Added Custom\\\",null,#duration(0, 0, 0, 0),Replacer.ReplaceValue,{\\\"DaysSincePreviousEntry\\\"}),\\n    #\\\"Changed Type1\\\" = Table.TransformColumnTypes(#\\\"Replaced Value24\\\",{{\\\"DaysSincePreviousEntry\\\", Int64.Type}}),\\n    #\\\"Added Conditional Column\\\" = Table.AddColumn(#\\\"Changed Type1\\\", \\\"Index-Asc-ByDate-WithJumps\\\", each if [DaysSincePreviousEntry] > 61 then [#\\\"Index-Asc-ByDate\\\"] else (Number.RandomBetween(1,10)*[#\\\"Index-Asc-ByDate\\\"])),\\n    #\\\"Changed Type2\\\" = Table.TransformColumnTypes(#\\\"Added Conditional Column\\\",{{\\\"Index-Asc-ByDate-WithJumps\\\", type number}}),\\n    Custom1 = Table.AddColumn(#\\\"Changed Type2\\\", \\\"Event-Icon\\\", each if Text.Contains([Event], \\\"👶\\\") then \\\"👶\\\" else if Text.Contains([Event], \\\"🪦\\\") then \\\"🪦\\\" else if Text.Contains([Event], \\\"🤝\\\") then \\\"🤝\\\" else if Text.Contains([Event], \\\"💤\\\") then \\\"💤\\\" else if Text.Contains([Event], \\\"📋\\\") then \\\"📋\\\" else if Text.Contains([Event], \\\"⚡\\\") then \\\"⚡\\\" else if Text.Contains([Event], \\\"📢\\\") then \\\"📢\\\" else if Text.Contains([Event], \\\"💡\\\") then \\\"💡\\\" else if Text.Contains([Event], \\\"📅 \\\") then \\\"📅 \\\" else if Text.Contains([Event], \\\"🚀\\\") then \\\"🚀\\\" else if Text.Contains([Event], \\\"👥\\\") then \\\"👥\\\" else if Text.Contains([Event], \\\"📄\\\") then \\\"📄\\\" else \\\"❔\\\")\\nin\\n    Custom1\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "URL",
      "lineageTag": "5d9e59df-11be-46f3-9d57-747063c527f1",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"005_tblOrg-SplitURLs\"",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"005_tblOrg-SplitURLs\\\"\\nin\\n    Source\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Contact",
      "lineageTag": "e8cefdb2-9c80-46c2-95ec-718926245664",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"005_tblOrg-SplitContacts\",",
        "    #\"Sorted Rows\" = Table.Sort(Source,{{\"Organisation\", Order.Ascending}, {\"IsMain\", Order.Ascending}, {\"Name\", Order.Ascending}, {\"Title\", Order.Ascending}})",
        "in",
        "    #\"Sorted Rows\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"005_tblOrg-SplitContacts\\\"\\nin\\n    Source\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Org",
      "lineageTag": "a95f0817-2701-4284-b228-3549caa6e99c",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = #\"010_tblOrg-Formatting\",",
        "    #\"Replaced blanks with nulls\" = Table.ReplaceValue(Source,\"\",null,Replacer.ReplaceValue,{\"Organisation\", \"URL-Main\", \"URL-Secondary\", \"Mission\", \"Activities AI\", \"Status\", \"Key Contacts\", \"Parent org\", \"Location\", \"Misc\", \"Organisation-Shortened.1\", \"Organisation-Shortened.2\", \"Organisation-Shortened\"}),",
        "    #\"Replaced mere linefeeds with nulls\" = Table.ReplaceValue(#\"Replaced blanks with nulls\",\"#(lf)\",null,Replacer.ReplaceValue,{\"Organisation\", \"URL-Main\", \"URL-Secondary\", \"Mission\", \"Activities AI\", \"Status\", \"Key Contacts\", \"Parent org\", \"Location\", \"Misc\", \"Organisation-Shortened.1\", \"Organisation-Shortened.2\", \"Organisation-Shortened\"})",
        "in",
        "    #\"Replaced mere linefeeds with nulls\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = #\\\"010_tblOrg-Formatting\\\",\\n    #\\\"Replaced blanks with nulls\\\" = Table.ReplaceValue(Source,\\\"\\\",null,Replacer.ReplaceValue,{\\\"Organisation\\\", \\\"URL-Main\\\", \\\"URL-Secondary\\\", \\\"Mission\\\", \\\"Activities AI\\\", \\\"Status\\\", \\\"Key Contacts\\\", \\\"Parent org\\\", \\\"Location\\\", \\\"Misc\\\", \\\"Organisation-Shortened.1\\\", \\\"Organisation-Shortened.2\\\", \\\"Organisation-Shortened\\\"}),\\n    #\\\"Replaced mere linefeeds with nulls\\\" = Table.ReplaceValue(#\\\"Replaced blanks with nulls\\\",\\\"#(lf)\\\",null,Replacer.ReplaceValue,{\\\"Organisation\\\", \\\"URL-Main\\\", \\\"URL-Secondary\\\", \\\"Mission\\\", \\\"Activities AI\\\", \\\"Status\\\", \\\"Key Contacts\\\", \\\"Parent org\\\", \\\"Location\\\", \\\"Misc\\\", \\\"Organisation-Shortened.1\\\", \\\"Organisation-Shortened.2\\\", \\\"Organisation-Shortened\\\"})\\nin\\n    #\\\"Replaced mere linefeeds with nulls\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Wordcloud",
      "lineageTag": "36ca1059-c0d6-42f4-8a1f-274837336b44",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.Combine({#\"015_tblOrg-AcronymForMerge\", #\"015_tblOrg-BaseNameForMerge\"})",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Table.Combine({#\\\"015_tblOrg-AcronymForMerge\\\", #\\\"015_tblOrg-BaseForMerge\\\"})\\nin\\n    Source\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "qryLastRefreshed",
      "lineageTag": "ecbdca64-d934-4d60-bf81-685501b36fb7",
      "queryGroupId": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = DateTime.FixedLocalNow()+ #duration(0,10,0,0)",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = DateTime.FixedLocalNow()+ #duration(0,10,0,0)\\nin\\n    Source\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "DateTime",
      "isHidden": false
    }
  ],
  "queryGroups": [
    {
      "name": "1-Extract",
      "id": "03cc17d2-b786-4533-9e08-3757305b8559",
      "order": 1,
      "description": ""
    },
    {
      "name": "3-Load",
      "id": "a55e5df8-a5ed-41a5-9741-f61204660dfa",
      "order": 3,
      "description": ""
    },
    {
      "name": "2-Transform",
      "id": "7e7f840f-ae98-45a0-835c-527fa55935d5",
      "order": 2,
      "description": ""
    },
    {
      "name": "EXCLUDE SENSITIVE DATA! SEMANTIC MODEL IS PUBLIC",
      "id": "50c3da7b-b542-4093-a8ca-220b25cc861d",
      "description": ""
    },
    {
      "name": "Events",
      "id": "5c2e8db2-501f-4df5-8470-e49160f33be3",
      "description": "",
      "parentId": "7e7f840f-ae98-45a0-835c-527fa55935d5"
    },
    {
      "name": "Wordcloud",
      "id": "c0e891d5-b670-413b-86c8-b9e823090619",
      "order": 1,
      "description": "",
      "parentId": "7e7f840f-ae98-45a0-835c-527fa55935d5"
    },
    {
      "name": "Influences",
      "id": "7c7cce0d-9bc6-4e8b-8de4-c13128042440",
      "order": 2,
      "description": "",
      "parentId": "7e7f840f-ae98-45a0-835c-527fa55935d5"
    }
  ],
  "culture": "en-AU",
  "firewallEnabled": true
}